{"version":3,"sources":["components/CandidateRegistration.js","components/CandidateList.js","components/CandidateDetail.js","components/ParrainageConfig.js","App.js","reportWebVitals.js","index.js"],"names":["CandidateRegistration","step","setStep","useState","numCarteElecteur","setNumCarteElecteur","electeurInfos","setElecteurInfos","messageErreur","setMessageErreur","formData","setFormData","email","telephone","parti","slogan","photo","couleur1","couleur2","couleur3","urlInfo","React","createElement","Fragment","type","placeholder","value","onChange","e","target","onClick","async","response","axios","get","data","error","_error$response","_error$response$data","message","style","color","nom","prenom","date_naissance","post","num_carte_electeur","alert","code_securite","CandidateList","candidats","setCandidats","setError","useEffect","err","fetchCandidats","className","length","map","c","Link","to","id","key","src","alt","name","CandidateDetail","useParams","candidat","setCandidat","setMessage","fetchCandidat","href","url_info","rel","patch","ParrainageConfig","startDate","setStartDate","endDate","setEndDate","onSubmit","preventDefault","start","Date","end","today","htmlFor","App","Router","padding","borderBottom","marginRight","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.63ac517e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CandidateRegistration() {\r\n    const [step, setStep] = useState(1);\r\n    const [numCarteElecteur, setNumCarteElecteur] = useState('');\r\n    const [electeurInfos, setElecteurInfos] = useState(null);\r\n    const [messageErreur, setMessageErreur] = useState('');\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        telephone: '',\r\n        parti: '',\r\n        slogan: '',\r\n        photo: '',\r\n        couleur1: '',\r\n        couleur2: '',\r\n        couleur3: '',\r\n        urlInfo: ''\r\n    });\r\n\r\n    const handleCheckCarte = async () => {\r\n        try {\r\n            setMessageErreur('');\r\n            const response = await axios.get(`http://localhost:5000/api/electeurs/check?num=${numCarteElecteur}`);\r\n            setElecteurInfos(response.data);\r\n            setStep(2);\r\n        } catch (error) {\r\n            setMessageErreur(error.response?.data?.message || \"Erreur serveur\");\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/candidats', {\r\n                num_carte_electeur: numCarteElecteur,\r\n                ...formData\r\n            });\r\n            alert(`Candidat enregistré ! Code de sécurité : ${response.data.code_securite}`);\r\n        } catch (error) {\r\n            alert(\"Erreur lors de l'enregistrement\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {step === 1 && (\r\n                <>\r\n                    <h2>Vérification de l'électeur</h2>\r\n                    <input type=\"text\" placeholder=\"Numéro de carte\" value={numCarteElecteur} onChange={(e) => setNumCarteElecteur(e.target.value)} />\r\n                    <button onClick={handleCheckCarte}>Vérifier</button>\r\n                    {messageErreur && <p style={{ color: 'red' }}>{messageErreur}</p>}\r\n                </>\r\n            )}\r\n\r\n            {step === 2 && electeurInfos && (\r\n                <>\r\n                    <h2>Informations de l'électeur</h2>\r\n                    <p>Nom : {electeurInfos.nom}</p>\r\n                    <p>Prénom : {electeurInfos.prenom}</p>\r\n                    <p>Date de Naissance : {electeurInfos.date_naissance}</p>\r\n\r\n                    <h2>Informations supplémentaires</h2>\r\n                    <input type=\"email\" placeholder=\"Email\" onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\r\n                    <input type=\"text\" placeholder=\"Téléphone\" onChange={(e) => setFormData({ ...formData, telephone: e.target.value })} />\r\n                    <button onClick={handleSubmit}>Enregistrer</button>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CandidateRegistration;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction CandidateList() {\r\n    const [candidats, setCandidats] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchCandidats = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/candidats');\r\n                setCandidats(response.data);\r\n            } catch (err) {\r\n                setError(\"Erreur lors de la récupération des candidats.\");\r\n            }\r\n        };\r\n        fetchCandidats();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"max-w-5xl mx-auto mt-6\">\r\n            <h2 className=\"text-2xl font-semibold text-center mb-6\">Liste des Candidats</h2>\r\n            {error && <p className=\"text-red-500 text-center\">{error}</p>}\r\n            {candidats.length === 0 ? (\r\n                <p className=\"text-center text-gray-500\">Aucun candidat enregistré.</p>\r\n            ) : (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                    {candidats.map((c) => (\r\n                        <Link to={`/candidats/${c.id}`} key={c.id} className=\"block p-4 bg-white rounded-lg shadow-md hover:shadow-lg transition-all\">\r\n                            <div className=\"flex flex-col items-center\">\r\n                                <img src={c.photo || \"/default-avatar.png\"} alt={c.name} className=\"w-24 h-24 rounded-full mb-3\" />\r\n                                <h3 className=\"text-lg font-semibold\">{c.nom} {c.prenom}</h3>\r\n                                <p className=\"text-gray-500\">{c.parti || \"Indépendant\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CandidateList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction CandidateDetail() {\r\n    const { id } = useParams();\r\n    const [candidat, setCandidat] = useState(null);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchCandidat = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/api/candidats/${id}`);\r\n                setCandidat(response.data);\r\n            } catch (err) {\r\n                setMessage(\"Erreur lors de la récupération du candidat.\");\r\n            }\r\n        };\r\n        fetchCandidat();\r\n    }, [id]);\r\n\r\n    const handleRegenerateCode = async () => {\r\n        try {\r\n            setMessage('');\r\n            const response = await axios.patch(`http://localhost:5000/api/candidats/${id}/code`);\r\n            setMessage(`Nouveau code généré : ${response.data.code_securite}`);\r\n        } catch (err) {\r\n            setMessage(\"Erreur lors de la génération du code.\");\r\n        }\r\n    };\r\n\r\n    if (!candidat) return <div className=\"text-center mt-6\">Chargement...</div>;\r\n\r\n    return (\r\n        <div className=\"max-w-3xl mx-auto bg-white p-6 rounded-lg shadow-md mt-6\">\r\n            <h2 className=\"text-2xl font-semibold text-center mb-4\">Détails du Candidat</h2>\r\n            <div className=\"flex items-center justify-center\">\r\n                <img src={candidat.photo || \"/default-avatar.png\"} alt=\"Candidat\" className=\"w-32 h-32 rounded-full mb-4\" />\r\n            </div>\r\n            <p className=\"text-lg\"><strong>Nom :</strong> {candidat.nom} {candidat.prenom}</p>\r\n            <p className=\"text-lg\"><strong>Date de Naissance :</strong> {candidat.date_naissance}</p>\r\n            <p className=\"text-lg\"><strong>Email :</strong> {candidat.email}</p>\r\n            <p className=\"text-lg\"><strong>Téléphone :</strong> {candidat.telephone}</p>\r\n            <p className=\"text-lg\"><strong>Parti :</strong> {candidat.parti || \"Indépendant\"}</p>\r\n            <p className=\"text-lg\"><strong>Slogan :</strong> {candidat.slogan}</p>\r\n            <p className=\"text-lg\"><strong>Couleurs :</strong> {candidat.couleur1}, {candidat.couleur2}, {candidat.couleur3}</p>\r\n            <p className=\"text-lg\"><strong>Page info :</strong> <a href={candidat.url_info} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-500 hover:underline\">Lien</a></p>\r\n            <p className=\"text-lg\"><strong>Code Sécurité :</strong> {candidat.code_securite}</p>\r\n\r\n            <button onClick={handleRegenerateCode} className=\"bg-red-500 text-white px-4 py-2 mt-4 rounded hover:bg-red-700\">\r\n                Générer nouveau code\r\n            </button>\r\n            {message && <p className=\"text-green-500 mt-2\">{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CandidateDetail;\r\n","import React, { useState } from 'react';\r\n\r\nfunction ParrainageConfig() {\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setMessage('');\r\n\r\n        const start = new Date(startDate);\r\n        const end = new Date(endDate);\r\n        const today = new Date();\r\n\r\n        // Vérifications des dates\r\n        if (start >= end) {\r\n            setError(\"La date de début doit être avant la date de fin.\");\r\n        } else if (start <= today) {\r\n            setError(\"La date de début doit être dans le futur (au moins 6 mois après aujourd'hui).\");\r\n        } else {\r\n            setMessage(`Période de parrainage configurée du ${startDate} au ${endDate}.`);\r\n            // Tu peux ici envoyer les dates au backend via une API\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-xl mx-auto p-6 bg-white rounded-lg shadow-md mt-6\">\r\n            <h2 className=\"text-2xl font-semibold mb-4 text-center\">Configurer la Période de Parrainage</h2>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                <div>\r\n                    <label htmlFor=\"startDate\" className=\"block text-lg\">Date de début :</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"startDate\"\r\n                        value={startDate}\r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        className=\"w-full p-2 border border-gray-300 rounded-lg\"\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"endDate\" className=\"block text-lg\">Date de fin :</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"endDate\"\r\n                        value={endDate}\r\n                        onChange={(e) => setEndDate(e.target.value)}\r\n                        className=\"w-full p-2 border border-gray-300 rounded-lg\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"flex justify-between items-center\">\r\n                    <button type=\"submit\" className=\"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-700\">Enregistrer</button>\r\n                </div>\r\n\r\n                {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n                {message && <p className=\"text-green-500 mt-2\">{message}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ParrainageConfig;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport CandidateRegistration from './components/CandidateRegistration';\nimport CandidateList from './components/CandidateList';\nimport CandidateDetail from './components/CandidateDetail';\nimport ParrainageConfig from './components/ParrainageConfig';\n\n\n\nfunction App() {\n  return (\n      <Router>\n        <nav style={{ padding: 10, borderBottom: \"1px solid #ccc\" }}>\n          <Link to=\"/\" style={{ marginRight: 10 }}>Accueil</Link>\n          <Link to=\"/candidats\" style={{ marginRight: 10 }}>Liste des Candidats</Link>\n          <Link to=\"/candidats/new\" style={{ marginRight: 10 }}>Ajouter Candidat</Link>\n          <Link to=\"/parrainage\" style={{ marginRight: 10 }}>Configurer Parrainage</Link>\n        </nav>\n\n        <Routes>\n          <Route path=\"/\" element={<h1>Bienvenue dans le système de gestion des parrainages</h1>} />\n          <Route path=\"/candidats\" element={<CandidateList />} />\n          <Route path=\"/candidats/new\" element={<CandidateRegistration />} />\n          <Route path=\"/candidats/:id\" element={<CandidateDetail />} />\n          <Route path=\"/parrainage\" element={<ParrainageConfig />} />\n        </Routes>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}